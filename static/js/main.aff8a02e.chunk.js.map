{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionItem/TransactionItem.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","st","Object","entries","map","key","value","className","s","label","quantity","profile","description","src","alt","Statistics","title","getRandomColor","color","i","Math","floor","random","statistics","statList","item","style","background","percentage","id","FriendListItem","isOnline","status","isOffline","width","FriendList","allfriends","friends","TransactionItem","type","amount","currency","TransactionHistory","items","transactionHistory","App","user","statisticalData","transactionsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff8a02e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Profile_label__36WLm\",\"profile\":\"Profile_profile__3jrRv\",\"stats\":\"Profile_stats__23rig\",\"quantity\":\"Profile_quantity__3gNyz\",\"description\":\"Profile_description__29iOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__C1ybn\",\"item\":\"Statistics_item__1wA9u\",\"statList\":\"Statistics_statList__PQBNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__2sSyj\",\"isOnline\":\"FriendListItem_isOnline__2lyxc\",\"isOffline\":\"FriendListItem_isOffline__2u28Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__330sS\"};","import s from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  const st = Object.entries(stats).map(([key, value]) => (\r\n    <li key={key}>\r\n      <span className={s.label}>{key}</span>\r\n      <span className={s.quantity}>{value}</span>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt={name} className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n      <ul className={s.stats}>{st}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }).isRequired,\r\n};\r\nexport default Profile;\r\n","import s from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ stats, title }) => {\r\n  function getRandomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      <ul className={s.statList}>\r\n        {stats.map((item) => (\r\n          <li\r\n            key={item.id}\r\n            className={s.item}\r\n            style={{ background: getRandomColor() }}\r\n          >\r\n            <span className=\"label\">{item.label}</span>\r\n            <span className=\"percentage\">{item.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      id: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    })\r\n  ),\r\n  title: PropTypes.string,\r\n};\r\nexport default Statistics;\r\n","import s from \"./FriendListItem.module.css\";\r\nconst FriendListItem = ({ isOnline, avatar, name }) => {\r\n  return (\r\n    <li className=\"item\">\r\n      <span\r\n        className={`${s.status} ${isOnline ? s.isOnline : s.isOffline}`}\r\n      ></span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n","import FriendListItem from \"./FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  const allfriends = friends.map((item) => {\r\n    return (\r\n      <FriendListItem\r\n        name={item.name}\r\n        avatar={item.avatar}\r\n        isOnline={item.isOnline}\r\n        key={item.id}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <ul className=\"friend-list\" key=\"1\">\r\n      {allfriends}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from \"prop-types\";\r\nconst TransactionItem = ({ type, amount, currency }) => {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionItem.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\nexport default TransactionItem;\r\n","import TransactionItem from \"./TransactionItem/TransactionItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./TransactionHistory.module.css\";\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <TransactionItem key={item.id} {...item} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\nTransactionHistory.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    type: PropTypes.string,\r\n    amount: PropTypes.string,\r\n    currency: PropTypes.string,\r\n  }),\r\n};\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport user from \"./data/user.json\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport friends from \"./data/friends.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport transactionsData from \"./data/transactions.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload Stats\" stats={statisticalData} />;\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactionsData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}